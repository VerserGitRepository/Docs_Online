@model  DocsOnline.Models.ProjectDetailsModel
<script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
<div class="container" style="margin-top:30px;">


    @Html.DropDownListFor(model => model.ProjectID, Model.Projectlist, "PROJECT", new { @class = "form-control project", @id = "ddlProjectId" })
    <div class="pull-right">
        @Html.Label("Upload a File", htmlAttributes: new { @class = "control-label col-md-4" })<input type="file" name="UploadResumeFile" id="ResumeFile" />
        @*@Html.HiddenFor(model => model.FilePath)*@
    </div>

    <br>
    <div class="row ">
        <div class="col-md-4">
            <table class="table pull-left" style="margin-right:0px;border:solid; width:90%; font-size:16px; border-width:thin; border-color:lightgray">
                <thead>
                    <tr>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @foreach (var item in Model.FolderName)
                            {
                                <a href="#" onclick="GetFolderFiles(@item)"><span class="glyphicon glyphicon-folder-close" />@item</a>
                                <br />

                            }
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="col-md-6 pull-left" style="border:solid; font-size:16px; border-color:lightgray">

            @{

                ViewBag.Title = "Download Files";
                var Files = (ViewBag.Files as string[]);

                if (Files != null && Files.Any())
                {
                    foreach (var file in Files)
                    {
                        <br />
                        @Html.ActionLink(file, "DownloadFile", new { fileName = file })
                        <br />
                    }
                }
                else
                {
                    <label>No File(s) to Download</label>
                }
            }
        </div>
    </div>

</div>


<script>

    $.fn.extend({
        treed: function (o) {

            var openedClass = 'glyphicon-minus-sign';
            var closedClass = 'glyphicon-plus-sign';

            if (typeof o != 'undefined') {
                if (typeof o.openedClass != 'undefined') {
                    openedClass = o.openedClass;
                }
                if (typeof o.closedClass != 'undefined') {
                    closedClass = o.closedClass;
                }
            };

            //initialize each of the top levels
            var tree = $(this);
            tree.addClass("tree");
            tree.find('li').has("ul").each(function () {
                var branch = $(this); //li with children ul
                branch.prepend("<i class='indicator glyphicon " + closedClass + "'></i>");
                branch.addClass('branch');
                branch.on('click', function (e) {
                    if (this == e.target) {
                        var icon = $(this).children('i:first');
                        icon.toggleClass(openedClass + " " + closedClass);
                        $(this).children().children().toggle();
                    }
                })
                branch.children().children().toggle();
            });
            //fire event from the dynamically added icon
            tree.find('.branch .indicator').each(function () {
                $(this).on('click', function () {
                    $(this).closest('li').click();
                });
            });
            //fire event to open branch if the li contains an anchor instead of text
            tree.find('.branch>a').each(function () {
                $(this).on('click', function (e) {
                    $(this).closest('li').click();
                    e.preventDefault();
                });
            });
            //fire event to open branch if the li contains a button instead of text
            tree.find('.branch>button').each(function () {
                $(this).on('click', function (e) {
                    $(this).closest('li').click();
                    e.preventDefault();
                });
            });
        }
    });

    $('#tree2').treed({ openedClass: 'glyphicon-folder-open', closedClass: 'glyphicon-folder-close' });

    function GetFolderFiles(FolderName) {
        $.ajax({
            url: "./GetListOfFiles",
            type: "GET",
            data: { "FolderName": FolderName },
            beforeSend: function () {
                alert("testing");
            },
            success: function (result) {
                $("#content").html(result);
            },
            error: function (resp) {
                alert(resp);
            }
        });
    }

</script>
